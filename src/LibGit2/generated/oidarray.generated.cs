//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace LibGit2
{
    using System.Runtime.InteropServices;
    
    public static partial class libgit2
    {
        /// <summary>
        /// Array of object ids
        /// </summary>
        [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
        public partial struct git_oidarray
        {
            public IntPtr ids;
            
            public size_t count;
        }
        
        /// <summary>
        /// Free the OID array
        /// </summary>
        /// <param name="array">git_oidarray from which to free oid data</param>
        /// <remarks>
        /// This method must (and must only) be called on `git_oidarray`
        /// objects where the array is allocated by the library. Not doing so,
        /// will result in a memory leak.This does not free the `git_oidarray` itself, since the library will
        /// never allocate that object directly itself (it is more commonly embedded
        /// inside another struct or created on the stack).
        /// </remarks>
        [DllImport(LibGit2Name, CallingConvention = CallingConvention.Cdecl)]
        public static extern void git_oidarray_free(ref git_oidarray array);
    }
}
