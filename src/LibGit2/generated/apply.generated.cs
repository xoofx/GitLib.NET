//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace LibGit2
{
    using System.Runtime.InteropServices;
    
    public static partial class libgit2
    {
        public enum git_apply_location_t : int
        {
            /// <summary>
            /// Apply the patch to the workdir, leaving the index untouched.
            /// This is the equivalent of `git apply` with no location argument.
            /// </summary>
            GIT_APPLY_LOCATION_WORKDIR = (int)0,
            
            /// <summary>
            /// Apply the patch to the index, leaving the working directory
            /// untouched.  This is the equivalent of `git apply --cached`.
            /// </summary>
            GIT_APPLY_LOCATION_INDEX = (int)1,
            
            /// <summary>
            /// Apply the patch to both the working directory and the index.
            /// This is the equivalent of `git apply --index`.
            /// </summary>
            GIT_APPLY_LOCATION_BOTH = (int)2,
        }
        
        /// <summary>
        /// Apply the patch to the workdir, leaving the index untouched.
        /// This is the equivalent of `git apply` with no location argument.
        /// </summary>
        public const git_apply_location_t GIT_APPLY_LOCATION_WORKDIR = git_apply_location_t.GIT_APPLY_LOCATION_WORKDIR;
        
        /// <summary>
        /// Apply the patch to the index, leaving the working directory
        /// untouched.  This is the equivalent of `git apply --cached`.
        /// </summary>
        public const git_apply_location_t GIT_APPLY_LOCATION_INDEX = git_apply_location_t.GIT_APPLY_LOCATION_INDEX;
        
        /// <summary>
        /// Apply the patch to both the working directory and the index.
        /// This is the equivalent of `git apply --index`.
        /// </summary>
        public const git_apply_location_t GIT_APPLY_LOCATION_BOTH = git_apply_location_t.GIT_APPLY_LOCATION_BOTH;
        
        /// <summary>
        /// Apply options structure
        /// </summary>
        /// <seealso cref="git_apply_to_tree, git_apply"/>
        /// 
        /// <remarks>
        /// Initialize with `GIT_APPLY_OPTIONS_INIT`. Alternatively, you can
        /// use `git_apply_init_options`.
        /// </remarks>
        [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
        public partial struct git_apply_options
        {
            public uint version;
            
            public git_apply_delta_cb delta_cb;
            
            public git_apply_hunk_cb hunk_cb;
            
            public IntPtr payload;
        }
        
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate int git_apply_delta_cb(in git_diff_delta delta, IntPtr payload);
        
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate int git_apply_hunk_cb(in git_diff_hunk hunk, IntPtr payload);
        
        /// <summary>
        /// Apply a `git_diff` to a `git_tree`, and return the resulting image
        /// as an index.
        /// </summary>
        /// <param name="@out">the postimage of the application</param>
        /// <param name="repo">the repository to apply</param>
        /// <param name="preimage">the tree to apply the diff to</param>
        /// <param name="diff">the diff to apply</param>
        /// <param name="options">the options for the apply (or null for defaults)</param>
        [DllImport(LibGit2Name, CallingConvention = CallingConvention.Cdecl)]
        public static extern int git_apply_to_tree(out git_index @out, git_repository repo, git_tree preimage, git_diff diff, in git_apply_options options);
        
        /// <summary>
        /// Apply a `git_diff` to the given repository, making changes directly
        /// in the working directory, the index, or both.
        /// </summary>
        /// <param name="repo">the repository to apply to</param>
        /// <param name="diff">the diff to apply</param>
        /// <param name="location">the location to apply (workdir, index or both)</param>
        /// <param name="options">the options for the apply (or null for defaults)</param>
        [DllImport(LibGit2Name, CallingConvention = CallingConvention.Cdecl)]
        public static extern int git_apply(git_repository repo, git_diff diff, git_apply_location_t location, in git_apply_options options);
    }
}
